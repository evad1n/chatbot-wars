{"version":3,"sources":["scripts/api.js","components/fight/Transcript.jsx","components/fight/Arena.jsx","components/fight/Fight.jsx","components/Home.jsx","scripts/auth.js","components/workshop/edit/ConfirmModal.jsx","components/NavMenu.jsx","components/workshop/create/Finalize.jsx","components/workshop/create/LineInput.jsx","components/workshop/create/Greetings.jsx","components/workshop/create/Name.jsx","components/workshop/create/Questions.jsx","components/workshop/create/Responses.jsx","components/workshop/Create.jsx","components/workshop/Edit.jsx","components/workshop/Entrance.jsx","components/workshop/edit/LineTable.jsx","components/workshop/edit/BotDetail.jsx","components/auth/Login.jsx","components/auth/Register.jsx","router/Router.jsx","components/workshop/Workshop.jsx","scripts/theme.js","App.jsx","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","moods","useStyles","makeStyles","theme","container","flexGrow","maxHeight","line","display","name","fontWeight","Transcript","roomHash","scrollContainerRef","classes","scrollRef","useRef","useState","transcript","setTranscript","useEffect","el","current","scrollHeight","clientHeight","scrollTop","scrollIntoView","behaviour","length","interval","setInterval","a","get","response","data","clearInterval","delete","Box","className","List","ListItem","ListItemText","primary","map","msg","index","Fragment","ref","text","mood","Divider","height","border","sideBar","borderRight","alignContent","select","padding","borderBottom","addButton","marginTop","notStartedContainer","textAlign","justifyContent","notStartedMsg","fontSize","transcriptContainer","overflow","Arena","bots","setBots","roomBots","setRoomBots","setRoomHash","selectedBot","setSelectedBot","active","setActive","startRoom","post","hash","b","put","id","getBots","Grid","component","Paper","elevation","item","xs","FormControl","variant","fullWidth","InputLabel","Select","label","onChange","event","target","value","MenuItem","bot","Button","onClick","newBot","some","color","ListSubheader","style","paddingTop","title","fightZone","flex","flexDirection","marginBottom","feature","button","margin","authContext","createContext","ProvideAuth","children","auth","user","setUser","fetchData","uid","username","console","register","loginData","Error","login","password","setItem","logout","removeItem","useProvideAuth","Provider","useAuth","useContext","confirmButton","backgroundColor","props","hoverColor","ConfirmModal","onConfirm","prompt","confirmText","render","open","setOpen","handleClose","Dialog","onClose","DialogTitle","DialogActions","autoFocus","root","appBar","zIndex","drawer","palette","dark","dividerColor","contrastText","appBarLeft","width","flexShrink","appBarRight","paddingRight","loginLink","textDecoration","secondary","main","logoutContainer","logoutButton","drawerPaper","drawerContainer","activeNav","content","layout","nav","appBarHeight","overflowX","NavMenu","routes","useTheme","history","useHistory","CssBaseline","AppBar","position","Toolbar","disableGutters","headerContainer","Typography","align","noWrap","alignSelf","IconButton","ExitToApp","push","NavLink","to","Drawer","paper","Object","values","route","icon","exact","activeClassName","path","ListItemIcon","Finalize","spacing","LineInput","msgs","errorMessages","updateLine","TextField","helperText","join","Greetings","updateGreetings","updateHandler","setValidator","titleStyle","greeting","setGreeting","setError","errorMsgs","setErrorMsgs","validate","useCallback","validGreeting","undefined","valid","borderColor","borderWidth","Name","updateName","setName","validName","currentName","checkBotName","badLength","Questions","updateQuestions","question1","setQuestion1","question2","setQuestion2","error1","setError1","error2","setError2","errorMsgs1","setErrorMsgs1","errorMsgs2","setErrorMsgs2","errorMessages1","errorMessages2","validQuestion1","validQuestion2","Responses","updateResponses","response1","setResponse1","response2","setResponse2","validResponse1","validResponse2","activeStep","success","light","stepContainer","stepContent","stepButton","botsContainer","noBots","tableContainer","selectBot","cursor","loadingContainer","loading","directionText","row","overflowWrap","LineTable","botID","lineType","lines","min","refresh","setLine","addLine","deleteLine","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","hover","substr","validText","size","tabContainer","generalContainer","generalSave","errorList","TabPanel","other","role","hidden","paddingBottom","formContainer","bottomText","link","info","failed","formRow","RouterLink","HomeIcon","useRouteMatch","i","PrivateRoute","Build","setActiveStep","Set","completed","setCompleted","allStepsCompleted","steps","handleStep","step","has","handleComplete","newCompleted","add","isStepComplete","setBotID","greetings","setGreetings","questions","setQuestions","responses","setResponses","handler","createBot","log","JSON","stringify","Stepper","alternativeLabel","nonLinear","Step","StepButton","disabled","direction","React","createElement","validator","setLoading","deleteBot","CircularProgress","useParams","tab","setTab","setBot","setErrorMessages","nameError","setNameError","validGreetings","validQuestions","validResponses","updateBot","getBotData","showValidName","Tabs","newValue","Tab","general","subheader","Forum","location","useLocation","state","setState","errors","setErrors","setFailed","newErrors","tryLogin","from","pathname","replace","Person","Lock","type","noAuth","firstName","lastName","checkUsername","tryRegister","App","NoAuthRoute","rest","createMuiTheme","brown","amber","ThemeProvider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95fba401.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n    baseURL: \"/api\",\n});\n\n// Add stored token to header for each request\nAPI.interceptors.request.use(config => {\n    const token = localStorage.getItem(\"jwt_token\");\n    config.headers.Authorization = `Bearer ${token}`;\n    return config;\n},\n    error => Promise.reject(error)\n);\n\n\nconst moods = [\n    \"Happy\",\n    \"Angry\",\n    \"Sad\"\n];\n\nexport { moods };\n\n\nexport default API;","import { Box, Divider, List, ListItem, ListItemText, makeStyles } from '@material-ui/core';\nimport API, { moods } from 'scripts/api';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flexGrow: 1,\n        maxHeight: \"100%\",\n    },\n    line: {\n        display: \"flex\"\n    },\n    name: {\n        fontWeight: 700\n    }\n}));\n\nexport default function Transcript({ roomHash, scrollContainerRef }) {\n    const classes = useStyles();\n    const scrollRef = useRef(null);\n\n    const [transcript, setTranscript] = useState([]);\n\n    // Autoscroll\n    useEffect(() => {\n        const el = scrollContainerRef.current;\n        if (scrollRef.current && (el.scrollHeight - el.clientHeight) - el.scrollTop < 80) {\n            scrollRef.current.scrollIntoView({ behaviour: \"smooth\" });\n        }\n    }, [transcript.length, scrollContainerRef]);\n\n    // Set timer loop for getting lines\n    useEffect(() => {\n        const interval = setInterval(async () => {\n            let response = await API.get(`/rooms/${roomHash}`);\n            setTranscript(response.data);\n        }, 1000);\n        return () => {\n            clearInterval(interval);\n            // Delete room on leave\n            API.delete(`/rooms/${roomHash}`);\n        };\n    }, [roomHash]);\n\n    return (\n        <Box className={classes.container}>\n            <List>\n                {transcript.length === 0 ?\n                    <ListItem>\n                        <ListItemText primary={\"Waiting for messages...\"} />\n                    </ListItem>\n                    :\n                    transcript.map((msg, index) => (\n                        <React.Fragment key={index}>\n                            <ListItem ref={index === transcript.length - 1 ? scrollRef : null}>\n                                <Box className={\"MuiListItemText-root MuiListItemText-multiline\"}>\n                                    <p className={\"MuiTypography-root MuiListItemText-primary MuiTypography-body1 MuiTypography-displayBlock\"}><strong>{msg.name}</strong>: {msg.line.text}</p>\n                                    <p className={\"MuiTypography-root MuiListItemText-secondary MuiTypography-body2 MuiTypography-colorTextSecondary MuiTypography-displayBlock\"}>{moods[msg.line.mood]}</p>\n                                </Box>\n                            </ListItem>\n                            {index !== transcript.length - 1 && <Divider />}\n                        </React.Fragment>\n                    ))\n                }\n            </List>\n        </Box>\n    );\n}\n","import { Button, FormControl, Grid, InputLabel, List, ListItem, ListItemText, ListSubheader, makeStyles, MenuItem, Paper, Select } from '@material-ui/core';\nimport API from 'scripts/api';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Transcript from './Transcript';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flexGrow: 1,\n        height: \"100%\",\n        border: \"1px solid #bbb\"\n    },\n    sideBar: {\n        borderRight: \"1px solid grey\",\n        alignContent: \"flex-start\"\n    },\n    select: {\n        padding: 10,\n        borderBottom: \"1px solid grey\",\n    },\n    addButton: {\n        marginTop: 5\n    },\n    notStartedContainer: {\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        alignContent: \"center\"\n    },\n    notStartedMsg: {\n        textAlign: \"center\",\n        fontSize: 20\n    },\n    transcriptContainer: {\n        overflow: 'auto',\n        maxHeight: \"100%\"\n    }\n}));\n\nexport default function Arena() {\n    const classes = useStyles();\n    const scrollContainerRef = useRef(null);\n\n\n    const [bots, setBots] = useState([]);\n    const [roomBots, setRoomBots] = useState([]);\n    const [roomHash, setRoomHash] = useState(\"\");\n    const [selectedBot, setSelectedBot] = useState(\"\");\n    const [active, setActive] = useState(false);\n\n    // Create room\n    const startRoom = async () => {\n        let response = await API.post(`/rooms`);\n        setRoomHash(response.data.hash);\n        // Add all bots to room\n        for (const b of roomBots) {\n            await API.put(`/rooms/${response.data.hash}/${b.id}`);\n        }\n        setActive(true);\n    };\n\n    // Initial load of bots\n    useEffect(() => {\n        // Fetch bots\n        const getBots = async () => {\n            let response = await API.get('/bots');\n            setBots(response.data);\n        };\n\n        getBots();\n    }, [roomHash]);\n\n    const addBot = () => {\n        if (selectedBot === \"\")\n            return;\n        let newBot = bots[selectedBot];\n        // Check if already in\n        if (roomBots.some(bot => bot.id === newBot.id)) {\n            return;\n        }\n        if (active) {\n            API.put(`/rooms/${roomHash}/${newBot.id}`);\n        }\n        // Add bot ID to selected bots\n        setRoomBots([...roomBots, {\n            name: newBot.name,\n            id: newBot.id\n        }]);\n    };\n\n    const changeSelection = (event) => {\n        setSelectedBot(event.target.value);\n    };\n\n    return (\n        <Grid component={Paper} elevation={3} container item xs={12} className={classes.container}>\n            <Grid container item xs={3} className={classes.sideBar}>\n                <Grid item xs={12} className={classes.select}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <InputLabel>Add a bot</InputLabel>\n                        <Select\n                            variant={'outlined'}\n                            label=\"Add a bot\"\n                            onChange={changeSelection}\n                            value={selectedBot}\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {bots.map((bot, index) => {\n                                return (\n                                    <MenuItem value={index} key={index}>{bot.name}</MenuItem>\n                                );\n                            })}\n                        </Select>\n                        <Button onClick={addBot} variant={'contained'} color={'secondary'} className={classes.addButton}>Add</Button>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    <List>\n                        <ListSubheader style={{ textAlign: \"center\" }}>Current Bots</ListSubheader>\n                        {roomBots.map((bot, index) => (\n                            <ListItem key={index}>\n                                <ListItemText primary={bot.name} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Grid>\n            </Grid>\n            <Grid container item xs={9} className={classes.transcriptContainer} ref={scrollContainerRef}>\n                {active ? (\n                    <Transcript roomHash={roomHash} scrollContainerRef={scrollContainerRef} />\n                ) : (\n                    <Grid container className={classes.notStartedContainer} item xs={12}>\n                        <Grid item xs={12}>\n                            <p className={classes.notStartedMsg}>Start the room to see messages</p>\n                            <Button onClick={startRoom} variant={'contained'} color={'secondary'}>Start</Button>\n                        </Grid>\n                    </Grid>\n                )}\n            </Grid>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography } from '@material-ui/core';\nimport Arena from './Arena';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        paddingTop: 30,\n        flexGrow: 1,\n        alignContent: \"flex-start\",\n    },\n    title: {\n        fontSize: 30,\n        fontWeight: \"bold\"\n    },\n    fightZone: {\n        flexGrow: 1,\n        padding: 20,\n        height: \"80vh\"\n    }\n}));\n\nexport default function Fight() {\n    const classes = useStyles();\n\n    return (\n        <Grid container className={classes.container}>\n            <Grid item xs={12}>\n                <Typography className={classes.title} align={'center'}>WELCOME TO THE DEATH ZONE</Typography>\n            </Grid>\n            <Grid item xs={12} className={classes.fightZone}>\n                <Arena />\n            </Grid>\n        </Grid>\n    );\n}\n","import { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        justifyContent: \"space-around\"\n    },\n    title: {\n        fontSize: 40,\n        fontWeight: 'bolder',\n        marginTop: 30,\n        marginBottom: 50,\n    },\n    feature: {\n        marginTop: 50,\n        flexGrow: 1\n    },\n    button: {\n        margin: \"0 30%\",\n        marginTop: 20,\n        marginBottom: 200,\n        fontSize: 30,\n        padding: \"20px 40px\"\n    }\n}));\n\nexport default function Landing() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography className={classes.title} align={\"center\"}>WELCOME TO CHATBOT WARS</Typography>\n            <div className={classes.container}>\n                <Typography variant={'h6'}>\n                    Build your own chatbot. Watch it crash and burn.\n                </Typography >\n                <Button className={classes.button} size={'large'} variant={'contained'} color={'secondary'} component={RouterLink} to={'/workshop'}>Get Started</Button>\n            </div>\n        </React.Fragment>\n    );\n}\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport API from 'scripts/api';\n\nconst authContext = createContext();\n\n// Provider component that wraps your app and makes auth object ...\n// ... available to any child component that calls useAuth().\nexport function ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return <authContext.Provider value={auth}>{children}</authContext.Provider>;\n}\n\n// Hook for child components to get the auth object ...\n// ... and re-render when it changes.\nexport const useAuth = () => {\n    return useContext(authContext);\n};\n\n// Provider hook that creates auth object and handles state\nfunction useProvideAuth() {\n    // Start as true, and once no user is discovered, routes will be rerendered\n    const [user, setUser] = useState(true);\n\n    // Initial attempt to fetch jwt\n    useEffect(() => {\n        async function fetchData() {\n            let token = localStorage.getItem(\"jwt_token\");\n            if (token != null) {\n                try {\n                    let response = await API.get('/me');\n                    setUser({\n                        uid: response.data.uid,\n                        username: response.data.username\n                    });\n                } catch (error) {\n                    console.error(error);\n                }\n            } else {\n                setUser(false);\n            }\n        }\n\n        fetchData();\n    }, []);\n\n    const register = async (loginData) => {\n        try {\n            let response = await API.post('/users', loginData);\n            return response;\n        } catch (error) {\n            throw Error(error);\n        }\n    };\n\n    const login = async (username, password) => {\n        try {\n            let response = await API.post('/sessions', {\n                username,\n                password\n            });\n            // Save token in localstorage\n            localStorage.setItem(\"jwt_token\", response.data.token);\n            setUser({\n                uid: response.data.uid,\n                username: response.data.username\n            });\n            return true;\n        } catch (error) {\n            throw Error(error);\n        }\n    };\n\n    const logout = () => {\n        // Delete token from local storage\n        localStorage.removeItem(\"jwt_token\");\n        setUser(() => false);\n    };\n\n    // Return the user object and auth methods\n    return {\n        user,\n        register,\n        login,\n        logout,\n    };\n}","import { Button, Dialog, DialogActions, DialogTitle, makeStyles } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    confirmButton: {\n        backgroundColor: props => props.color,\n        '&:hover': {\n            backgroundColor: props => props.hoverColor\n        }\n    }\n}));\n\nexport default function ConfirmModal(props) {\n    const { onConfirm, prompt, confirmText, render } = props;\n    const classes = useStyles(props);\n\n    const [open, setOpen] = useState(false);\n\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleConfirm = () => {\n        onConfirm();\n        handleClose();\n    };\n\n    return (\n        <React.Fragment>\n            {render && render(handleOpen)}\n            <Dialog onClose={handleClose} open={open}>\n                <DialogTitle >{prompt}</DialogTitle>\n                <DialogActions style={{ justifyContent: \"center\" }}>\n                    <Button autoFocus onClick={handleClose} variant=\"contained\" color=\"primary\">Cancel</Button>\n                    <Button\n                        onClick={handleConfirm}\n                        variant=\"contained\"\n                        className={classes.confirmButton} >{confirmText}</Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n","import { AppBar, CssBaseline, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography, useTheme } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ExitToApp } from '@material-ui/icons';\nimport React from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { useAuth } from 'scripts/auth';\nimport ConfirmModal from './workshop/edit/ConfirmModal';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: theme.palette.primary.dark\n    },\n    dividerColor: {\n        backgroundColor: theme.palette.primary.contrastText\n    },\n    appBarLeft: {\n        width: drawerWidth,\n        flexShrink: 1,\n        fontSize: 30,\n        fontWeight: 500,\n    },\n    appBarRight: {\n        textAlign: \"right\",\n        flexGrow: 1,\n        paddingRight: 20,\n        fontSize: 30,\n    },\n    loginLink: {\n        textDecoration: \"none\",\n        color: theme.palette.primary.contrastText,\n        \"&:hover\": {\n            color: theme.palette.secondary.main\n        }\n    },\n    logoutContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"flex-end\"\n    },\n    logoutButton: {\n        color: \"white\",\n        \"&:hover\": {\n            color: theme.palette.secondary.main\n        }\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerContainer: {\n        overflow: 'auto',\n    },\n    activeNav: {\n        fontWeight: \"bold\",\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.main,\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main,\n        }\n    },\n    content: {\n        paddingTop: theme.layout.nav.appBarHeight,\n        flexGrow: 1,\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: 'column',\n        overflowX: \"hidden\"\n    },\n}));\n\nexport default function NavMenu({ routes, children }) {\n    const { user, logout } = useAuth();\n\n    const theme = useTheme();\n    const classes = useStyles();\n    const history = useHistory();\n\n    function signout() {\n        logout();\n        history.push(\"/\");\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar disableGutters className={classes.headerContainer}>\n                    <Typography className={classes.appBarLeft} variant=\"h4\" align={'center'} noWrap>\n                        Chatbot Wars\n                    </Typography>\n                    <div className={classes.appBarRight}>\n                        {user ?\n                            <div className={classes.logoutContainer}>\n                                <Typography variant=\"h5\" style={{ alignSelf: \"center\" }}>Hi, {user.username}</Typography>\n                                <ConfirmModal />\n\n                                <ConfirmModal\n                                    render={open => (\n                                        <IconButton onClick={open} className={classes.logoutButton}>\n                                            <ExitToApp />\n                                        </IconButton>\n                                    )}\n                                    onConfirm={signout}\n                                    prompt={\"Are you sure you want to log out?\"}\n                                    confirmText={\"Logout\"}\n                                    color={theme.palette.secondary.main}\n                                    hoverColor={theme.palette.secondary.dark}\n                                />\n\n                            </div>\n                            :\n                            <Typography component={NavLink} to={\"/login\"} variant=\"h5\" className={classes.loginLink}>Login</Typography>\n                        }\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                    <List>\n                        {Object.values(routes).map((route, index) => (\n                            route.icon && <ListItem\n                                button\n                                exact={route.exact || false}\n                                component={NavLink}\n                                activeClassName={classes.activeNav}\n                                to={route.path}\n                                key={index}>\n                                <ListItemIcon>\n                                    <route.icon />\n                                </ListItemIcon>\n                                <ListItemText primary={route.name} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            </Drawer>\n            <main className={classes.content}>\n                {children}\n            </main>\n        </div >\n    );\n}","import { Grid, Typography } from '@material-ui/core';\nimport React from 'react';\n\nexport default function Finalize() {\n    return (\n        <React.Fragment>\n            <Grid item container spacing={3} alignContent=\"space-around\" style={{ textAlign: \"center\", height: \"100%\" }}>\n                <Grid item xs={12} >\n                    <Typography variant={'h6'} >That's a good start.\n                </Typography>\n                </Grid>\n                <Grid item xs={12} >\n                    <Typography variant={'h6'} >\n                        You can keep working on your bot anytime by going back to the workshop.\n                </Typography>\n                </Grid>\n                <Grid item xs={12} >\n                    <Typography variant={'h6'} >\n                        Click 'To Glory' to send your bot to the battlefield!\n                </Typography>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import { FormControl, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nimport React from 'react';\nimport { moods } from 'scripts/api';\n\nconst streamErrors = (msgs) => {\n    return msgs.join(\"\\n\");\n};\n\nexport default function LineInput({ autoFocus, error, errorMessages, label, line, updateLine }) {\n\n    const changeText = (event) => {\n        updateLine({ text: event.target.value });\n    };\n\n    const changeSelection = (event) => {\n        updateLine({ mood: event.target.value });\n    };\n\n\n    return (\n        <React.Fragment>\n            <Grid item xs={9}>\n                <FormControl fullWidth>\n                    <TextField autoFocus={autoFocus || false} value={line.text} error={error} helperText={streamErrors(errorMessages)} label={label} variant=\"outlined\" onChange={changeText} />\n                </FormControl>\n            </Grid>\n            <Grid item xs={3} >\n                <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel>Mood</InputLabel>\n                    <Select\n                        variant={'outlined'}\n                        label=\"Mood\"\n                        onChange={changeSelection}\n                        value={line.mood}\n                    >\n                        {moods.map((mood, index) => {\n                            return (\n                                <MenuItem value={index} key={index}>{mood}</MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            </Grid>\n        </React.Fragment>\n    );\n}","import { Grid, Typography } from '@material-ui/core';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport LineInput from './LineInput';\n\nconst badLength = \"Greeting must be non-empty\";\n\nexport default function Greetings({ value, updateHandler: updateGreetings, setValidator, titleStyle }) {\n    const [greeting, setGreeting] = useState(value[0]);\n    const [error, setError] = useState(false);\n    const [errorMsgs, setErrorMsgs] = useState([]);\n\n\n    const validate = useCallback(\n        () => {\n            let errorMessages = [];\n            const validGreeting = greeting.text.length > 0;\n            if (!validGreeting) {\n                setError(true);\n                errorMessages.push(badLength);\n            }\n            setErrorMsgs(errorMessages);\n            updateGreetings([greeting]);\n            return validGreeting;\n        },\n        [greeting, updateGreetings],\n    );\n\n    useEffect(() => {\n        setValidator(validate);\n    }, [setValidator, validate]);\n\n    const changeGreeting = ({ text, mood }) => {\n        setGreeting({\n            text: text !== undefined ? text : greeting.text,\n            mood: mood !== undefined ? mood : greeting.mood\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} style={titleStyle}>\n                <Typography variant={'h5'} align={'center'}>What's your bot gonna say prior to embarassing your foes?</Typography>\n            </Grid>\n            <LineInput autoFocus error={error} errorMessages={errorMsgs} label=\"Greeting\" line={greeting} updateLine={changeGreeting} />\n        </React.Fragment>\n    );\n}\n","import { FormControl, Grid, makeStyles, TextField, Typography } from '@material-ui/core';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport API from 'scripts/api';\n\nconst useStyles = makeStyles((theme) => ({\n    valid: {\n        '& label.MuiInputLabel-formControl': {\n            color: 'green',\n        },\n        '& p.MuiFormHelperText-root': {\n            color: 'green',\n        },\n        '& input + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:hover + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n    },\n}));\n\nexport default function Name({ value, updateHandler: updateName, setValidator, titleStyle }) {\n    const classes = useStyles();\n\n    const [name, setName] = useState(value);\n    const [error, setError] = useState(\"\");\n\n    const validName = name.length >= 3 && name.length <= 30;\n\n    const validate = useCallback(\n        async () => {\n            if (!validName) {\n                setError(\"Name must be between 3 and 30 characters\");\n                return false;\n            }\n            // Check unique username\n            try {\n                let response = await API.get(`/unique/bots/${name}`);\n                if (!response.data.valid) {\n                    setError(\"That bot name is taken\");\n                    return false;\n                } else {\n                    setError(\"\");\n                    updateName(name);\n                }\n            } catch (error) {\n                console.error(error);\n            }\n            return true;\n        },\n        [name, updateName, validName],\n    );\n\n    // Check unique bot name\n    useEffect(() => {\n        async function checkBotName(currentName) {\n            if (!validName) {\n                setError(\"\");\n                return;\n            }\n            try {\n                let response = await API.get(`/unique/bots/${currentName}`);\n                if (!response.data.valid && currentName === name) {\n                    setError(\"That bot name is taken\");\n                } else {\n                    setError(\"\");\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        checkBotName(name);\n    }, [name, validName]);\n\n    useEffect(() => {\n        setValidator(validate);\n    }, [setValidator, validate]);\n\n    const changeName = (event) => {\n        setName(event.target.value);\n    };\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} style={titleStyle}>\n                <Typography variant={'h5'} align={'center'}>First thing's first, give your bot a name</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <FormControl fullWidth>\n                    <TextField\n                        autoFocus\n                        className={error.length === 0 && validName ? classes.valid : null}\n                        error={error.length > 0}\n                        helperText={error.length === 0 && validName ? \"Valid bot name\" : error}\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        value={name}\n                        onChange={changeName} />\n                </FormControl>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import { Grid, Typography } from '@material-ui/core';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport LineInput from './LineInput';\n\nconst badLength = \"Question must be non-empty\";\n\nexport default function Questions({ value, updateHandler: updateQuestions, setValidator, titleStyle }) {\n    const [question1, setQuestion1] = useState(value[0]);\n    const [question2, setQuestion2] = useState(value[1]);\n    const [error1, setError1] = useState(false);\n    const [error2, setError2] = useState(false);\n    const [errorMsgs1, setErrorMsgs1] = useState([]);\n    const [errorMsgs2, setErrorMsgs2] = useState([]);\n\n    const validate = useCallback(\n        () => {\n            setError1(false);\n            setError2(false);\n            let errorMessages1 = [];\n            let errorMessages2 = [];\n\n            const validQuestion1 = question1.text.length > 0;\n            const validQuestion2 = question2.text.length > 0;\n            if (!validQuestion1) {\n                errorMessages1.push(badLength);\n                setError1(true);\n            }\n            if (!validQuestion2) {\n                errorMessages2.push(badLength);\n                setError2(true);\n            }\n            setErrorMsgs1(errorMessages1);\n            setErrorMsgs2(errorMessages2);\n            updateQuestions([question1, question2]);\n            return validQuestion1 && validQuestion2;\n        },\n        [question1, question2, updateQuestions],\n    );\n\n    useEffect(() => {\n        setValidator(validate);\n    }, [setValidator, validate]);\n\n    const changeQuestion1 = ({ text, mood }) => {\n        setQuestion1({\n            text: text !== undefined ? text : question1.text,\n            mood: mood !== undefined ? mood : question1.mood\n        });\n    };\n\n    const changeQuestion2 = ({ text, mood }) => {\n        setQuestion2({\n            text: text !== undefined ? text : question2.text,\n            mood: mood !== undefined ? mood : question2.mood\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} style={titleStyle}>\n                <Typography variant={'h5'} align={'center'}>Everyone needs a conversation starter</Typography>\n            </Grid>\n            <LineInput autoFocus label=\"Question 1\" error={error1} errorMessages={errorMsgs1} line={question1} updateLine={changeQuestion1} />\n            <LineInput label=\"Question 2\" error={error2} errorMessages={errorMsgs2} line={question2} updateLine={changeQuestion2} />\n        </React.Fragment>\n    );\n}\n","import { Grid, Typography } from '@material-ui/core';\nimport React, { useState, useCallback, useEffect } from 'react';\nimport LineInput from './LineInput';\n\nconst badLength = \"Response must be non-empty\";\n\nexport default function Responses({ value, updateHandler: updateResponses, setValidator, titleStyle }) {\n    const [response1, setResponse1] = useState(value[0]);\n    const [response2, setResponse2] = useState(value[1]);\n    const [error1, setError1] = useState(false);\n    const [error2, setError2] = useState(false);\n    const [errorMsgs1, setErrorMsgs1] = useState([]);\n    const [errorMsgs2, setErrorMsgs2] = useState([]);\n\n    const validate = useCallback(\n        () => {\n            setError1(false);\n            setError2(false);\n            let errorMessages1 = [];\n            let errorMessages2 = [];\n\n            const validResponse1 = response1.text.length > 0;\n            const validResponse2 = response2.text.length > 0;\n            if (!validResponse1) {\n                errorMessages1.push(badLength);\n                setError1(true);\n            }\n            if (!validResponse2) {\n                errorMessages2.push(badLength);\n                setError2(true);\n            }\n            setErrorMsgs1(errorMessages1);\n            setErrorMsgs2(errorMessages2);\n            updateResponses([response1, response2]);\n            return validResponse1 && validResponse2;\n        },\n        [response1, response2, updateResponses],\n    );\n\n    useEffect(() => {\n        setValidator(validate);\n    }, [setValidator, validate]);\n\n    const changeResponse1 = ({ text, mood }) => {\n        setResponse1({\n            text: text !== undefined ? text : response1.text,\n            mood: mood !== undefined ? mood : response1.mood\n        });\n    };\n\n    const changeResponse2 = ({ text, mood }) => {\n        setResponse2({\n            text: text !== undefined ? text : response2.text,\n            mood: mood !== undefined ? mood : response2.mood\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <Grid item xs={12} style={titleStyle}>\n                <Typography variant={'h5'} align={'center'}>Time for some trash talk</Typography>\n            </Grid>\n            <LineInput autoFocus label=\"Response 1\" error={error1} errorMessages={errorMsgs1} line={response1} updateLine={changeResponse1} />\n            <LineInput label=\"Response 2\" error={error2} errorMessages={errorMsgs2} line={response2} updateLine={changeResponse2} />\n        </React.Fragment>\n    );\n}\n","import { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Step from '@material-ui/core/Step';\nimport StepButton from '@material-ui/core/StepButton';\nimport Stepper from '@material-ui/core/Stepper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport API from 'scripts/api';\nimport Finalize from 'components/workshop/create/Finalize';\nimport Greetings from 'components/workshop/create/Greetings';\nimport Name from 'components/workshop/create/Name';\nimport Questions from 'components/workshop/create/Questions';\nimport Responses from 'components/workshop/create/Responses';\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        display: \"flex\",\n        flexDirection: 'column',\n        padding: 20\n    },\n    activeStep: {\n        color: theme.palette.success.light\n    },\n    stepContainer: {\n        padding: 20,\n        flexGrow: 1,\n        textAlign: \"center\",\n    },\n    stepContent: {\n        flexGrow: 1,\n        padding: \"0 !important\",\n        alignContent: \"flex-start\"\n    },\n    stepButton: {\n        alignSelf: \"flex-end\",\n        textAlign: \"center\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n    }\n}));\n\n\nexport default function Create() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = useState(0);\n    const [completed, setCompleted] = useState(new Set());\n\n    const allStepsCompleted = () => {\n        return completed.size === steps.length;\n    };\n\n    const handleNext = () => {\n        setActiveStep(activeStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep(activeStep - 1);\n    };\n\n    const handleStep = (step) => () => {\n        // Check for allowing user to directly advance this far\n        if (completed.has(step)) {\n            setActiveStep(step);\n        }\n    };\n\n    const handleComplete = async () => {\n        const newCompleted = new Set(completed);\n        // Call child validation method\n        let valid = await steps[activeStep].validate();\n        if (!valid) {\n            newCompleted.delete(activeStep);\n            setCompleted(newCompleted);\n            return;\n        }\n\n        newCompleted.add(activeStep);\n        setCompleted(newCompleted);\n\n        if (completed.size !== steps.length) {\n            handleNext();\n        }\n    };\n\n    function isStepComplete(step) {\n        return completed.has(step);\n    }\n\n    const lastStep = () => {\n        return activeStep === steps.length - 1;\n    };\n\n    const [botID, setBotID] = useState(null);\n    const [name, setName] = useState(\"\");\n    const [greetings, setGreetings] = useState([\n        {\n            text: \"\",\n            mood: 0\n        }\n    ]);\n    const [questions, setQuestions] = useState([\n        {\n            text: \"\",\n            mood: 0\n        },\n        {\n            text: \"\",\n            mood: 0\n        }\n    ]);\n    const [responses, setResponses] = useState([\n        {\n            text: \"\",\n            mood: 0\n        },\n        {\n            text: \"\",\n            mood: 0\n        }\n    ]);\n\n    const steps = [\n        {\n            title: \"Name\",\n            component: Name,\n            value: name,\n            handler: setName\n        },\n        {\n            title: \"Greetings\",\n            component: Greetings,\n            value: greetings,\n            handler: setGreetings\n        },\n        {\n            title: \"Questions\",\n            component: Questions,\n            value: questions,\n            handler: setQuestions\n        },\n        {\n            title: \"Responses\",\n            component: Responses,\n            value: responses,\n            handler: setResponses\n        },\n        {\n            title: \"Finalize\",\n            component: Finalize,\n            value: name,\n            handler: null,\n            validate: () => true\n        },\n    ];\n\n    const createBot = async () => {\n        const bot = {\n            name: name,\n            greetings: greetings,\n            questions: questions,\n            responses: responses,\n        };\n        console.log(bot);\n\n        let response = await API.post('/bots', bot);\n        // Should log ID here\n        setBotID(response.data.id);\n        console.log(JSON.stringify(response.data));\n    };\n\n\n    return (\n        <div className={classes.root}>\n            {!allStepsCompleted() && (<Stepper alternativeLabel nonLinear activeStep={activeStep}>\n                {steps.map((step, index) => {\n                    const stepProps = {};\n                    const buttonProps = {};\n                    return (\n                        <Step active={activeStep === index} key={step.title} {...stepProps}>\n                            <StepButton\n                                disabled={activeStep !== index && !isStepComplete(index)}\n                                onClick={handleStep(index)}\n                                completed={activeStep !== index && isStepComplete(index)}\n                                {...buttonProps}\n                            >\n                                {step.title}\n                            </StepButton>\n                        </Step>\n                    );\n                })}\n            </Stepper>)}\n            <Grid container direction={'row'} spacing={3} className={classes.stepContainer}>\n                {allStepsCompleted() ? (\n                    <React.Fragment>\n                        <Grid item xs={12}>\n                            <Typography variant={'h4'}>\n                                Bot created successfully!\n                        </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button to={`/workshop/edit/${botID}`} component={RouterLink} variant={'contained'} color={'secondary'}>See it in the workshop</Button>\n                        </Grid>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Grid container spacing={3} item xs={12} className={classes.stepContent}>\n                            {React.createElement(\n                                steps[activeStep].component,\n                                {\n                                    value: steps[activeStep].value,\n                                    updateHandler: steps[activeStep].handler,\n                                    setValidator: (validator => steps[activeStep].validate = validator),\n                                    titleStyle: { padding: \"30px 0px\" }\n                                },\n                            )}\n                        </Grid>\n                        <Grid item xs={12} className={classes.stepButton}>\n                            <Button disabled={activeStep === 0} onClick={handleBack} size=\"large\" variant=\"contained\" color=\"secondary\">Back</Button>\n                            {!lastStep() ?\n                                (\n                                    < Button onClick={handleComplete} size=\"large\" variant=\"contained\" color=\"secondary\">Next</Button>\n                                ) : (\n                                    < Button onClick={() => { createBot(); handleComplete(); }} size=\"large\" variant=\"contained\" color=\"secondary\">To Glory</Button>\n                                )\n                            }\n                        </Grid>\n                    </React.Fragment>\n                )}\n            </Grid>\n        </div >\n    );\n}\n","import { Button, CircularProgress, Grid, IconButton, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport API from 'scripts/api';\nimport ConfirmModal from './edit/ConfirmModal';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        flexGrow: 1,\n    },\n    botsContainer: {\n        paddingTop: 20,\n        alignContent: \"flex-start\"\n    },\n    noBots: {\n        marginTop: \"20%\",\n        marginBottom: 20\n    },\n    tableContainer: {\n        padding: 20\n    },\n    selectBot: {\n        textDecoration: \"none\",\n        color: \"black\",\n        cursor: \"pointer\",\n        '&:hover': {\n            color: \"green\"\n        }\n    },\n    delete: {\n        '&:hover': {\n            color: \"red\"\n        }\n    },\n    loadingContainer: {\n        alignContent: \"center\"\n    },\n    loading: {\n        display: \"flex\",\n        alignSelf: \"center\",\n        justifyContent: \"center\",\n        flexGrow: 1\n    },\n}));\n\n\nexport default function Edit() {\n    const classes = useStyles();\n    const history = useHistory();\n\n\n    const [loading, setLoading] = useState(true);\n    const [bots, setBots] = useState([]);\n\n\n    // Fetch bot data\n    const getBots = useCallback(\n        async () => {\n            let response = await API.get('/users/bots');\n            setBots(response.data);\n            setLoading(false);\n        },\n        [],\n    );\n\n    const selectBot = (id) => {\n        history.push(`/workshop/edit/${id}`);\n    };\n\n    useEffect(() => {\n        getBots();\n    }, [getBots]);\n\n\n    const deleteBot = async (id) => {\n        await API.delete(`/bots/${id}`);\n        getBots();\n    };\n\n    return (\n        <Grid container className={classes.container}>\n            {loading ? (\n                <Grid item xs={12} className={classes.loading}>\n                    <CircularProgress color=\"secondary\" />\n                </Grid >\n            ) : (\n                <Grid container item xs={12} className={classes.botsContainer}>\n                    {bots.length > 0 ? (\n                        <React.Fragment>\n                            <Grid item xs={12} >\n                                <Typography variant={'h5'} align={'center'}>Select a bot to edit</Typography>\n                            </Grid>\n                            <Grid item xs={12} className={classes.tableContainer}>\n                                <TableContainer component={Paper} >\n                                    <Table stickyHeader>\n                                        <colgroup>\n                                            <col style={{ width: '80%' }} />\n                                            <col style={{ width: '20%' }} />\n                                        </colgroup>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Name</TableCell>\n                                                <TableCell align={'center'}>Delete</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {bots.map((bot, index) => (\n                                                <TableRow key={index} hover>\n                                                    <TableCell className={classes.selectBot} onClick={() => { selectBot(bot.id); }} align={'left'}>\n                                                        {bot.name}\n                                                    </TableCell>\n                                                    <TableCell align={'center'}>\n                                                        <ConfirmModal\n                                                            render={open => (\n                                                                <IconButton onClick={open} className={classes.delete}>\n                                                                    <DeleteIcon />\n                                                                </IconButton>\n                                                            )}\n                                                            onConfirm={() => deleteBot(bot.id)}\n                                                            prompt={\"Are you sure you want to delete this bot?\"}\n                                                            confirmText={\"Delete\"}\n                                                            color={\"red\"}\n                                                            hoverColor={\"darkred\"}\n                                                        />\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </Grid>\n                        </React.Fragment>\n                    ) : (\n                        <React.Fragment>\n                            <Grid item xs={12} className={classes.noBots}>\n                                <Typography variant={'h4'} align={'center'}>You haven't created any bots</Typography>\n                            </Grid>\n                            <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                                <Button component={RouterLink} to={\"/workshop/create\"} variant={'contained'} color={'secondary'}>Create a bot</Button>\n                            </Grid>\n                        </React.Fragment>\n                    )\n                    }\n                </Grid>\n            )}\n        </Grid >\n    );\n}\n","import { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        fontSize: 40,\n        fontWeight: 'bolder',\n        marginTop: 30,\n        marginBottom: 50,\n    },\n    container: {\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n        textAlign: \"center\",\n    },\n    directionText: {\n        fontSize: 24,\n        padding: 20\n    },\n    button: {\n        fontSize: 20,\n        margin: \"auto\",\n        width: \"50%\"\n    }\n}));\n\nexport default function Entrance() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <Typography className={classes.title} align={'center'}>WELCOME TO THE WORKSHOP</Typography>\n            <div className={classes.container}>\n                <div>\n                    <Typography className={classes.directionText} align={'center'}>Start off by creating a bot\n                </Typography>\n                    <Button className={classes.button} component={RouterLink} to={'/workshop/create'} size=\"large\" variant=\"contained\" color=\"secondary\">Create</Button>\n                </div>\n                <div>\n                    <Typography className={classes.directionText} align={'center'}>Or keep working on existing ones\n                </Typography>\n                    <Button className={classes.button} component={RouterLink} to={'/workshop/edit'} size=\"large\" variant=\"contained\" color=\"secondary\">Edit</Button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n","import { Button, Dialog, DialogActions, DialogTitle, Grid, IconButton, makeStyles, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\nimport API, { moods } from 'scripts/api';\nimport React, { useState } from 'react';\nimport LineInput from '../create/LineInput';\nimport ConfirmModal from './ConfirmModal';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: \"70%\"\n    },\n    row: {\n        overflowWrap: 'break-word'\n    },\n    delete: {\n        '&:hover': {\n            color: \"red\"\n        }\n    },\n}));\n\nconst badLength = \"Question must be non-empty\";\n\n\nexport default function LineTable({ botID, lineType, lines, min, refresh }) {\n    const classes = useStyles();\n    const [line, setLine] = useState({\n        text: \"\",\n        mood: 0\n    });\n    const [error, setError] = useState(false);\n    const [errorMsgs, setErrorMsgs] = useState([]);\n    const [open, setOpen] = useState(false);\n\n\n    const changeLine = ({ text, mood }) => {\n        setLine({\n            text: text !== undefined ? text : line.text,\n            mood: mood !== undefined ? mood : line.mood\n        });\n    };\n\n    const clearInputs = () => {\n        setLine({\n            text: \"\",\n            mood: 0\n        });\n    };\n\n    const validate = () => {\n        setError(false);\n        let errorMessages = [];\n\n        const validText = line.text.length > 0;\n        if (!validText) {\n            errorMessages.push(badLength);\n            setError(true);\n        }\n        setErrorMsgs(errorMessages);\n\n        if (!validText)\n            return;\n        addLine();\n    };\n\n    const addLine = async () => {\n        try {\n            await API.post(`/bots/${botID}/${lineType}`, line);\n            refresh();\n            clearInputs();\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    const deleteLine = async (index) => {\n        if (lines.length <= min) {\n            setOpen(true);\n            return;\n        }\n        await API.delete(`/bots/${botID}/${lineType}/${index}`);\n        refresh();\n    };\n\n    return (\n        <React.Fragment>\n            <Dialog onClose={() => setOpen(false)} open={open}>\n                <DialogTitle>\n                    Must have at least {min} {lineType}\n                </DialogTitle>\n                <DialogActions style={{ justifyContent: \"center\" }}>\n                    <Button autoFocus onClick={() => setOpen(false)} color=\"primary\">OK</Button>\n                </DialogActions>\n            </Dialog>\n            <Grid item xs={12} className={classes.container}>\n                <TableContainer component={Paper}>\n                    <Table stickyHeader>\n                        <colgroup>\n                            <col style={{ width: '80%' }} />\n                            <col style={{ width: '10%' }} />\n                            <col style={{ width: '10%' }} />\n                        </colgroup>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align={'center'}>\n                                    Text\n                        </TableCell>\n                                <TableCell align={'center'}>\n                                    Mood\n                            </TableCell>\n                                <TableCell align={'center'}>\n                                    Delete\n                            </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {lines.map((line, index) => (\n                                <TableRow hover key={index} className={classes.row}>\n                                    <TableCell align={'left'}>\n                                        {line.text}\n                                    </TableCell>\n                                    <TableCell align={'center'}>\n                                        {moods[line.mood]}\n                                    </TableCell>\n                                    <TableCell align={'center'}>\n                                        <ConfirmModal\n                                            render={open => (\n                                                <IconButton onClick={open} className={classes.delete}>\n                                                    <DeleteIcon />\n                                                </IconButton>\n                                            )}\n                                            onConfirm={() => deleteLine(index)}\n                                            prompt={\"Are you sure you want to delete this line?\"}\n                                            confirmText={\"Delete\"}\n                                            color={\"red\"}\n                                            hoverColor={\"darkred\"}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n\n            <Grid container spacing={3} item xs={12}>\n                <LineInput label={`Add ${lineType.substr(0, -1)}`} error={error} errorMessages={errorMsgs} line={line} updateLine={changeLine} />\n                <Grid item xs={12} style={{ textAlign: \"center\" }}>\n                    <Button onClick={validate} fullWidth size={\"large\"} variant={'contained'} color={'secondary'}>Add</Button>\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n}\n","import { AppBar, Button, CircularProgress, FormControl, Grid, List, ListItem, ListItemText, makeStyles, Tab, Tabs, TextField, Typography } from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from 'scripts/api';\nimport LineTable from './LineTable';\n\nconst useStyles = makeStyles((theme) => ({\n    name: {\n        fontSize: 30,\n        fontWeight: 600,\n        textAlign: \"center\",\n        padding: 5.5\n    },\n    tabContainer: {\n        padding: 20,\n        height: \"100%\",\n        flexGrow: 1\n    },\n    generalContainer: {\n        paddingTop: 30,\n        textAlign: \"center\",\n        flexGrow: 1,\n        alignContent: \"flex-start\"\n    },\n    generalSave: {\n        alignSelf: \"flex-end\",\n    },\n    errorList: {\n        textAlign: \"center\",\n        color: \"red\"\n    },\n    loading: {\n        display: \"flex\",\n        alignSelf: \"center\",\n        justifyContent: \"center\",\n        flexGrow: 1\n    },\n    valid: {\n        '& label.MuiInputLabel-formControl': {\n            color: 'green',\n        },\n        '& p.MuiFormHelperText-root': {\n            color: 'green',\n        },\n        '& input + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:hover + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n    },\n}));\n\nexport default function BotDetail() {\n    const classes = useStyles();\n    const { id } = useParams();\n\n    const [loading, setLoading] = useState(true);\n    const [tab, setTab] = React.useState(0);\n    const [bot, setBot] = useState({});\n    const [name, setName] = useState(\"\");\n    const [errorMessages, setErrorMessages] = useState([]);\n    const [error, setError] = useState(false);\n\n    // General config\n    const [nameError, setNameError] = useState(\"\");\n\n    const validName = name.length >= 3 && name.length <= 30;\n\n    const validate = async () => {\n        let errorMsgs = [];\n\n        const validGreetings = bot.greetings.length >= 1;\n        const validQuestions = bot.questions.length >= 2;\n        const validResponses = bot.responses.length >= 2;\n        if (!validName) {\n            setNameError(\"Name must be between 3 and 30 characters\");\n        }\n        if (!validGreetings) {\n            errorMsgs.push(\"Must have at least 1 greeting\");\n        }\n        if (!validQuestions) {\n            errorMsgs.push(\"Must have at least 2 questions\");\n        }\n        if (!validResponses) {\n            errorMsgs.push(\"Must have at least 2 responses\");\n        }\n\n        if (!validName || !validGreetings || !validQuestions || !validResponses) {\n            setErrorMessages(errorMsgs);\n            setError(true);\n            return;\n        }\n\n        if (bot.name !== name) {\n            try {\n                let response = await API.get(`/unique/bots/${name}`);\n                if (!response.data.valid) {\n                    setNameError(\"That bot name is taken\");\n                } else {\n                    setNameError(\"\");\n                    updateBot();\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        } else {\n            updateBot();\n        }\n    };\n\n    // Check unique bot name\n    useEffect(() => {\n        async function checkBotName(currentName) {\n            if (!validName) {\n                setNameError(\"\");\n                return;\n            }\n            try {\n                let response = await API.get(`/unique/bots/${currentName}`);\n                if (!response.data.valid && currentName === name && currentName !== bot.name) {\n                    setNameError(\"That bot name is taken\");\n                } else {\n                    setNameError(\"\");\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        checkBotName(name);\n    }, [name, validName, bot.name]);\n\n    const changeName = (event) => {\n        setName(event.target.value);\n    };\n\n    // Fetch bot data\n    const getBotData = useCallback(\n        async () => {\n            let response = await API.get(`/bots/${id}`);\n            setBot(response.data);\n            setName(response.data.name);\n            setLoading(false);\n        },\n        [id],\n    );\n\n    // Fetch bot data\n    const updateBot = async () => {\n        await API.put(`/bots/${id}`, {\n            ...bot,\n            name: name\n        }\n        );\n        getBotData();\n    };\n\n    // Initial load\n    useEffect(() => {\n        getBotData();\n    }, [getBotData]);\n\n    // Tab switching\n    const handleChange = (event, newValue) => {\n        setTab(newValue);\n    };\n\n    const showValidName = nameError.length === 0 && validName && name !== bot.name;\n\n    return (\n        <React.Fragment>\n            {loading ? (\n                <Grid container style={{ flexGrow: 1 }}>\n                    <Grid item xs={12} className={classes.loading}>\n                        <CircularProgress color=\"secondary\" />\n                    </Grid >\n                </Grid >\n            ) : (\n                <React.Fragment>\n                    <Typography className={classes.name}>\n                        {bot.name}\n                    </Typography>\n                    <AppBar position=\"static\">\n                        <Tabs value={tab} onChange={handleChange} variant={'fullWidth'}>\n                            <Tab label=\"General\" />\n                            <Tab label=\"Greetings\" />\n                            <Tab label=\"Questions\" />\n                            <Tab label=\"Responses\" />\n                        </Tabs>\n                    </AppBar>\n                    <React.Fragment>\n                        <TabPanel value={tab} index={0} className={classes.general}>\n                            <Grid container spacing={3} item xs={12} className={classes.generalContainer}>\n                                <Grid item xs={12}>\n                                    <FormControl fullWidth>\n                                        <TextField\n                                            autoFocus\n                                            className={showValidName ? classes.valid : null}\n                                            error={nameError.length > 0}\n                                            helperText={showValidName ? \"Valid bot name\" : nameError}\n                                            label=\"Name\"\n                                            variant=\"outlined\"\n                                            value={name}\n                                            onChange={changeName} />\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                            {error && (\n                                <Grid item xs={12} className={classes.errorList}>\n                                    <List subheader={\"Please fix the following errors\"}>\n                                        {errorMessages.map((msg, index) => (\n                                            <ListItem key={index}>\n                                                <ListItemText primary={msg} className={classes.errorList} />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </Grid>\n                            )}\n                            <Grid item xs={12} className={classes.generalSave}>\n                                <Button onClick={validate} fullWidth size={'large'} variant={'contained'} color={'secondary'}>Save</Button>\n                            </Grid>\n                        </TabPanel>\n                        <TabPanel value={tab} index={1}>\n                            <LineTable botID={bot.id} lineType={\"greetings\"} lines={bot.greetings} min={1} refresh={getBotData} />\n                        </TabPanel>\n                        <TabPanel value={tab} index={2}>\n                            <LineTable botID={bot.id} lineType={\"questions\"} lines={bot.questions} min={2} refresh={getBotData} />\n                        </TabPanel>\n                        <TabPanel value={tab} index={3}>\n                            <LineTable botID={bot.id} lineType={\"responses\"} lines={bot.responses} min={2} refresh={getBotData} />\n                        </TabPanel>\n                    </React.Fragment>\n                </React.Fragment>\n            )\n            } </React.Fragment>\n    );\n}\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n    const classes = useStyles();\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            style={{ height: \"100%\" }}\n            {...other}\n        >\n            {value === index && (\n                <Grid container className={classes.tabContainer}>\n                    {children}\n                </Grid>\n            )}\n        </div>\n    );\n}","import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Lock, Person } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport { useAuth } from 'scripts/auth';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        paddingTop: 60,\n        paddingBottom: 50,\n        fontSize: 36\n    },\n    formContainer: {\n        width: 500,\n        margin: \"auto\",\n        padding: 20,\n    },\n    bottomText: {\n        marginTop: -10,\n        textAlign: \"center\"\n    },\n    link: {\n        textDecoration: \"none\",\n        color: theme.palette.info.main,\n        \"&:hover\": {\n            color: theme.palette.secondary.main\n        }\n    },\n    icon: {\n        alignSelf: \"center\",\n        fontSize: 44,\n        paddingRight: 10\n    },\n    failed: {\n        color: \"red\",\n        fontSize: 16,\n        padding: 0\n    }\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n    const { login } = useAuth();\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, setState] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    const [errors, setErrors] = useState({\n        username: \"\",\n        password: \"\",\n    });\n\n    const [failed, setFailed] = useState(false);\n\n\n    const validate = async () => {\n        let newErrors = {\n            username: \"\",\n            password: \"\",\n        };\n        let valid = true;\n        if (state.username.length === 0) {\n            newErrors.username = \"Username must not be empty\";\n            valid = false;\n        }\n        if (state.password.length === 0) {\n            newErrors.password = \"Password must not be empty\";\n            valid = false;\n        }\n        if (valid) {\n            tryLogin();\n        }\n        setErrors(() => newErrors);\n    };\n\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n    async function tryLogin() {\n        try {\n            await login(state.username, state.password);\n            // Nav to home page\n            history.replace(from);\n        } catch (error) {\n            setFailed(true);\n        }\n    }\n\n\n    return (\n        <React.Fragment>\n            <Grid container direction={'row'} style={{ margin: 0 }}>\n                <Grid item xs={12}>\n                    <Typography className={classes.title} align={'center'}>Login to edit your bots</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={4} component={Paper} className={classes.formContainer} elevation={6}>\n                        {failed && <Grid item xs={12} className={classes.failed}>\n                            <Typography align={'center'}>Invalid username or password</Typography>\n                        </Grid>}\n                        <Grid item xs={12} style={{ display: \"flex\" }}>\n                            <Person className={classes.icon} color={\"action\"} />\n                            <TextField\n                                error={state.username.length === 0 && errors.username.length > 0}\n                                helperText={state.username.length === 0 ? errors.username : \"\"}\n                                onChange={event => setState({ ...state, username: event.target.value })}\n                                label=\"Username\"\n                                variant=\"outlined\"\n                                style={{ flexGrow: 1 }}\n                            />\n                        </Grid>\n                        <Grid item xs={12} style={{ display: \"flex\" }}>\n                            <Lock className={classes.icon} color={\"action\"} />\n                            <TextField\n                                error={state.password.length === 0 && errors.password.length > 0}\n                                helperText={state.password.length === 0 ? errors.password : \"\"}\n                                onChange={event => setState({ ...state, password: event.target.value })}\n                                type={\"password\"}\n                                label=\"Password\"\n                                variant=\"outlined\"\n                                style={{ flexGrow: 1 }}\n\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button onClick={validate} fullWidth variant=\"contained\" color=\"secondary\" style={{}}>Log In</Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <p className={classes.bottomText}>Not registered? <RouterLink to={\"/register\"} className={classes.link}>Click here to create an account</RouterLink></p>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment >\n    );\n}\n","import { Button, Grid, Paper, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink, useHistory, useLocation } from 'react-router-dom';\nimport API from 'scripts/api';\nimport { useAuth } from 'scripts/auth';\n\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        paddingTop: 60,\n        paddingBottom: 50,\n        fontSize: 36\n    },\n    formContainer: {\n        width: 600,\n        margin: \"auto\",\n        padding: 20\n    },\n    formRow: {\n        display: \"flex\",\n        justifyContent: \"space-around\"\n    },\n    bottomText: {\n        marginTop: -10,\n        textAlign: \"center\"\n    },\n    link: {\n        textDecoration: \"none\",\n        color: theme.palette.info.main,\n        \"&:hover\": {\n            color: theme.palette.secondary.main\n        }\n    },\n    valid: {\n        '& label.MuiInputLabel-formControl': {\n            color: 'green',\n        },\n        '& p.MuiFormHelperText-root': {\n            color: 'green',\n        },\n        '& input + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:focus + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n        '& input:valid:hover + fieldset': {\n            borderColor: 'green',\n            borderWidth: 2,\n        },\n    },\n}));\n\nexport default function Register() {\n    const classes = useStyles();\n    const { register, login } = useAuth();\n    const history = useHistory();\n    const location = useLocation();\n\n    const [state, setState] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n    });\n\n    const [errors, setErrors] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n    });\n\n    // Check unique username\n    useEffect(() => {\n        async function checkUsername(username) {\n            if (username.length === 0)\n                return;\n            try {\n                let response = await API.get(`/unique/users/${username}`);\n                if (!response.data.valid && username === state.username) {\n                    setErrors(errors => {\n                        return { ...errors, username: \"That username is taken\" };\n                    });\n                } else {\n                    setErrors(errors => {\n                        return { ...errors, username: \"\" };\n                    });\n                }\n            } catch (error) {\n                console.error(error);\n            }\n        }\n\n        checkUsername(state.username);\n    }, [state.username]);\n\n\n    function validate() {\n        let newErrors = {\n            firstName: \"\",\n            lastName: \"\",\n            username: state.username,\n            password: \"\",\n        };\n        let valid = true;\n        if (state.firstName.length === 0) {\n            newErrors.firstName = \"First name must not be empty\";\n            valid = false;\n        }\n        if (state.lastName.length === 0) {\n            newErrors.lastName = \"Last name must not be empty\";\n            valid = false;\n        }\n        if (state.username.length === 0) {\n            newErrors.username = \"Username must not be empty\";\n            valid = false;\n        }\n        if (state.password.length === 0) {\n            newErrors.password = \"Password must not be empty\";\n            valid = false;\n        }\n        if (valid) {\n            tryRegister();\n        }\n        setErrors(() => newErrors);\n    };\n\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n    async function tryRegister() {\n        try {\n            await register(state);\n            await login(state.username, state.password);\n            // Nav to home page\n            history.replace(from);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n\n    return (\n        <React.Fragment>\n            <Grid container direction={'row'} style={{ margin: 0 }}>\n                <Grid item xs={12}>\n                    <Typography className={classes.title} align={'center'}>Register to create your own bots</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={4} component={Paper} className={classes.formContainer} elevation={6}>\n                        <Grid item xs={12} className={classes.formRow}>\n                            <TextField\n                                error={state.firstName.length === 0 && errors.firstName.length > 0}\n                                helperText={state.firstName.length === 0 ? errors.firstName : \"\"}\n                                onChange={event => setState({ ...state, firstName: event.target.value })}\n                                label=\"First Name\"\n                                variant=\"outlined\" />\n                            <TextField\n                                error={state.lastName.length === 0 && errors.lastName.length > 0}\n                                helperText={state.lastName.length === 0 ? errors.lastName : \"\"}\n                                onChange={event => setState({ ...state, lastName: event.target.value })}\n                                label=\"Last Name\" variant=\"outlined\" />\n                        </Grid>\n                        <Grid item xs={12} className={classes.formRow}>\n                            <TextField\n                                className={errors.username.length === 0 && state.username.length > 0 ? classes.valid : null}\n                                error={errors.username.length > 0}\n                                helperText={errors.username.length === 0 && state.username.length !== 0 ? \"Valid username\" : errors.username}\n                                onChange={event => setState({ ...state, username: event.target.value })}\n                                label=\"Username\"\n                                variant=\"outlined\" />\n                            <TextField\n                                error={state.password.length === 0 && errors.password.length > 0}\n                                helperText={state.password.length === 0 ? errors.password : \"\"}\n                                onChange={event => setState({ ...state, password: event.target.value })}\n                                type={\"password\"}\n                                label=\"Password\"\n                                variant=\"outlined\" />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button onClick={validate} fullWidth variant=\"contained\" color=\"secondary\">Register</Button>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <p className={classes.bottomText}>Already a user? <RouterLink to={\"/login\"} className={classes.link}>Click here to login</RouterLink></p>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </React.Fragment >\n    );\n}\n","import Workshop from 'components/workshop/Workshop';\nimport Fight from 'components/fight/Fight';\nimport Home from \"components/Home\";\nimport NavMenu from 'components/NavMenu';\nimport React from \"react\";\nimport {\n    HashRouter as Router,\n    Redirect,\n    Route, Switch\n} from \"react-router-dom\";\nimport { Home as HomeIcon, Build, Forum } from '@material-ui/icons';\nimport Create from 'components/workshop/Create';\nimport Edit from 'components/workshop/Edit';\nimport Entrance from 'components/workshop/Entrance';\nimport BotDetail from 'components/workshop/edit/BotDetail';\nimport Login from 'components/auth/Login';\nimport Register from 'components/auth/Register';\nimport { useAuth } from 'scripts/auth';\n\n\nexport const routes = {\n    \"/\": {\n        name: \"Home\",\n        path: \"/\",\n        component: Home,\n        exact: true,\n        icon: HomeIcon\n    },\n    \"/workshop\": {\n        name: \"Workshop\",\n        path: \"/workshop\",\n        component: Workshop,\n        icon: Build,\n        routes: [\n            {\n                path: \"/\",\n                component: Entrance,\n                auth: false\n            },\n            {\n                path: \"/create\",\n                component: Create,\n                auth: true\n            },\n            {\n                path: \"/edit\",\n                component: Edit,\n                auth: true\n            },\n            {\n                path: \"/edit/:id\",\n                component: BotDetail,\n                auth: true\n            }\n        ]\n    },\n    \"/fight\": {\n        name: \"Fight\",\n        path: \"/fight\",\n        component: Fight,\n        icon: Forum\n    },\n    \"/login\": {\n        name: \"Login\",\n        path: \"/login\",\n        component: Login,\n        noAuth: true\n    },\n    \"/register\": {\n        name: \"Register\",\n        path: \"/register\",\n        component: Register,\n        noAuth: true\n    }\n};\n\nexport default function App() {\n    return (\n        <Router>\n            <NavMenu routes={routes}>\n                <Switch>\n                    {Object.values(routes).map((route, i) => {\n                        if (route.auth) {\n                            return (\n                                <PrivateRoute exact={route.exact || false} path={route.path} key={i}>\n                                    <route.component routes={route.routes} />\n                                </PrivateRoute>\n                            );\n                        } else {\n                            if (route.noAuth) {\n                                return (\n                                    <NoAuthRoute exact={route.exact || false} path={route.path} key={i}>\n                                        <route.component routes={route.routes} />\n                                    </NoAuthRoute>\n                                );\n                            } else {\n                                return (\n                                    <Route exact={route.exact || false} path={route.path} key={i}>\n                                        <route.component routes={route.routes} />\n                                    </Route>\n                                );\n                            }\n                        }\n                    })}\n                    <Route path=\"*\"\n                        render={({ location }) =>\n                            <Redirect\n                                to={{\n                                    pathname: \"/\",\n                                    state: { from: location }\n                                }}\n                            />\n                        }\n                    />\n                </Switch>\n            </NavMenu>\n        </Router>\n    );\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nexport function PrivateRoute({ children, ...rest }) {\n    const { user } = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\n// Only available if not logged in (login/register)\nexport function NoAuthRoute({ children, ...rest }) {\n    const { user } = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                user ? (\n                    <Redirect\n                        to={{\n                            pathname: \"/\",\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n}","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { PrivateRoute } from 'router/Router';\n\n\nexport default function Workshop({ routes }) {\n    const { path } = useRouteMatch();\n\n    return (\n        <React.Fragment>\n            <Switch>\n                {routes.map((route, i) => {\n                    if (route.auth) {\n                        return (\n                            <PrivateRoute exact path={`${path}${route.path}`} key={i}>\n                                <route.component />\n                            </PrivateRoute>\n                        );\n                    } else {\n                        return (\n                            <Route exact path={`${path}${route.path}`} key={i}>\n                                <route.component />\n                            </Route>\n                        );\n                    }\n                })}\n            </Switch>\n        </React.Fragment>\n    );\n}\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles';\nimport { brown, amber } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: brown[300],\n            main: brown[600],\n            dark: brown[900],\n            contrastText: '#fff',\n        },\n        secondary: {\n            light: amber[500],\n            main: amber[600],\n            dark: amber[800],\n            contrastText: '#000',\n        },\n    },\n    layout: {\n        nav: {\n            appBarHeight: 64\n        }\n    }\n});\n\nexport default theme;","import React from 'react';\nimport Router from 'router/Router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from 'scripts/theme';\nimport { ProvideAuth } from \"scripts/auth\";\n\n\nexport default function App() {\n    return (\n        <ProvideAuth>\n            <ThemeProvider theme={theme}>\n                <Router />\n            </ThemeProvider>\n        </ProvideAuth>\n\n    );\n}\n\n// function Navbar(props) {\n//     // Get auth state and re-render anytime it changes\n//     const auth = useAuth();\n\n//     return (\n//         <NavbarContainer>\n//             <Logo />\n//             <Menu>\n//                 <Link to=\"/about\">About</Link>\n//                 <Link to=\"/contact\">Contact</Link>\n//                 {auth.user ? (\n//                     <Fragment>\n//                         <Link to=\"/account\">Account ({auth.user.email})</Link>\n//                         <Button onClick={() => auth.signout()}>Signout</Button>\n//                     </Fragment>\n//                 ) : (\n//                     <Link to=\"/signin\">Signin</Link>\n//                 )}\n//             </Menu>\n//         </NavbarContainer>\n//     );\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}